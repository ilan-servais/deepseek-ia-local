const fs = require('fs');
const { execSync } = require('child_process');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üöÄ Script d\'initialisation de l\'environnement DeepSeek RAG');
console.log('--------------------------------------------------------');

// 1. V√©rifier si .env.local existe
if (!fs.existsSync('./.env.local')) {
  console.log('üìù Cr√©ation du fichier .env.local √† partir de .env.example...');
  
  if (fs.existsSync('./.env.example')) {
    fs.copyFileSync('./.env.example', './.env.local');
    console.log('‚úÖ Fichier .env.local cr√©√© avec succ√®s!');
  } else {
    console.error('‚ùå Fichier .env.example non trouv√©!');
    createDefaultEnvFile();
  }
} else {
  console.log('‚úÖ Fichier .env.local d√©j√† existant.');
}

// 2. V√©rifier Docker
console.log('\nüê≥ V√©rification de Docker...');

try {
  const dockerStatus = execSync('docker --version').toString();
  console.log(`‚úÖ Docker est install√©: ${dockerStatus.trim()}`);
  
  console.log('üîÑ D√©marrage du conteneur PostgreSQL...');
  try {
    execSync('docker-compose up -d');
    console.log('‚úÖ Conteneur PostgreSQL d√©marr√© avec succ√®s!');
  } catch (e) {
    console.error('‚ùå Erreur lors du d√©marrage du conteneur PostgreSQL:', e.message);
  }
  
} catch (e) {
  console.error('‚ùå Docker ne semble pas √™tre install√© ou n\'est pas disponible dans le PATH.');
  console.log('   Veuillez installer Docker: https://www.docker.com/get-started');
}

// 3. V√©rifier Ollama
console.log('\nü§ñ V√©rification d\'Ollama...');

try {
  const ollamaOutput = execSync('ollama list').toString();
  console.log('‚úÖ Ollama est install√© et fonctionne!');
  
  if (!ollamaOutput.includes('deepseek-r1')) {
    console.log('\nüì• Le mod√®le deepseek-r1:1.5b semble ne pas √™tre install√©.');
    askInstallModel();
  } else {
    console.log('‚úÖ Le mod√®le deepseek-r1:1.5b est d√©j√† install√©!');
    showCompleteMessage();
  }
} catch (e) {
  console.error('‚ùå Ollama ne semble pas √™tre install√© ou n\'est pas en cours d\'ex√©cution.');
  console.log('   Veuillez installer Ollama: https://ollama.ai/');
  showCompleteMessage();
}

function askInstallModel() {
  rl.question('‚û°Ô∏è Voulez-vous installer le mod√®le deepseek-r1:1.5b maintenant? (Oui/Non): ', (answer) => {
    if (answer.toLowerCase() === 'oui' || answer.toLowerCase() === 'o' || answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
      console.log('\nüì• Installation du mod√®le deepseek-r1:1.5b (cela peut prendre plusieurs minutes)...');
      try {
        execSync('ollama pull deepseek-r1:1.5b', { stdio: 'inherit' });
        console.log('‚úÖ Mod√®le install√© avec succ√®s!');
      } catch (e) {
        console.error('‚ùå Erreur lors de l\'installation du mod√®le:', e.message);
      }
    }
    showCompleteMessage();
    rl.close();
  });
}

function createDefaultEnvFile() {
  console.log('üìù Cr√©ation d\'un fichier .env.local par d√©faut...');
  
  const defaultEnvContent = `# Configuration de l'API Ollama
OLLAMA_API_HOST=http://localhost:11434

# Configuration PostgreSQL
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=postgres`;

  try {
    fs.writeFileSync('./.env.local', defaultEnvContent);
    console.log('‚úÖ Fichier .env.local cr√©√© avec des valeurs par d√©faut.');
  } catch (e) {
    console.error('‚ùå Impossible de cr√©er le fichier .env.local:', e.message);
  }
}

function showCompleteMessage() {
  console.log('\n‚ú® Initialisation termin√©e! ‚ú®');
  console.log('--------------------------------------------------------');
  console.log('Pour d√©marrer l\'application:');
  console.log('1. Assurez-vous que Docker et Ollama sont en cours d\'ex√©cution');
  console.log('2. Ex√©cutez: npm run dev');
  console.log('3. Ouvrez http://localhost:3000 dans votre navigateur');
  console.log('4. Acc√©dez √† l\'onglet "Documents" pour configurer la base de donn√©es');
  console.log('--------------------------------------------------------');
}
